//Font declarations and settings

// Generate a font-size and baseline-compatible line-height.
@mixin font-size($font-size, $line-height: auto) {
    font-size: $font-size;
    font-size: ($font-size / $base-font-size) * 1rem;

    @if $line-height == auto {
        line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }

    @else {

        @if (type-of($line-height) == number or $line-height == inherit or $line-height == normal) {
            line-height: $line-height;
        }

        @elseif ($line-height != none and $line-height != false) {
            @warn "D’oh! ‘#{$line-height}’ is not a valid value for `line-height`."
        }

    }
}

// fonts
@mixin font($name, $file, $eot:false, $eotiefix:false, $woff:false, $ttf:false, $otf:false, $svg:false, $weight: normal) {

    @font-face {
        font-family: $name;
        @if $eot == true { src: url($file + '.eot'); }
        @if $eotiefix == true { src: url($file + '.eot?#iefix') format('embedded-opentype'); }
        @if $woff == true { src: url($file + '.woff') format('woff'); }
        @if $ttf == true { src: url($file + '.ttf') format('truetype'); }
        @if $otf == true { src: url($file + '.otf') format("opentype"); }
        @if $svg == true { src: url($file + '#' + $name) format('svg'); }
        font-weight: $weight;
        font-style: normal;
    }
}
